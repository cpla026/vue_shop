<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coolron.shop.menu.dao.MenuMapper">
  <resultMap id="BaseResultMap" type="com.coolron.shop.menu.domain.Menu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="auth_name" jdbcType="VARCHAR" property="authName" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
  </resultMap>
  <sql id="Base_Column_List">
    id, auth_name, pid, path, level, icon
  </sql>

  <select id="getMenuByIds" resultMap="BaseResultMap" parameterType="list">
    SELECT
    <include refid="Base_Column_List"/>
    FROM menu
    <where>
      id in
      <foreach collection="menuIds" item="item" separator="," open="(" close=")">
          #{item}
      </foreach>
    </where>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.coolron.shop.menu.domain.Menu">
    insert into menu (id, auth_name, pid, 
      path, level, icon)
    values (#{id,jdbcType=INTEGER}, #{authName,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.coolron.shop.menu.domain.Menu">
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="authName != null">
        auth_name,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="icon != null">
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="authName != null">
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.coolron.shop.menu.domain.Menu">
    update menu
    <set>
      <if test="authName != null">
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coolron.shop.menu.domain.Menu">
    update menu
    set auth_name = #{authName,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>